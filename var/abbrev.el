;;-*-coding: utf-8;-*-
(define-abbrev-table 'global-abbrev-table
  '(
    ("abbout" "about" nil :count 0)
    ("abotu" "about" nil :count 0)
    ("abouta" "about a" nil :count 0)
    ("aboutit" "about it" nil :count 0)
    ("aboutthe" "about the" nil :count 0)
    ("abscence" "absence" nil :count 0)
    ("accesories" "accessories" nil :count 0)
    ("accidant" "accident" nil :count 0)
    ("accomodate" "accommodate" nil :count 0)
    ("accordingto" "according to" nil :count 0)
    ("accross" "across" nil :count 0)
    ("acheive" "achieve" nil :count 0)
    ("acheived" "achieved" nil :count 0)
    ("acheiving" "achieving" nil :count 0)
    ("acn" "can" nil :count 0)
    ("acommodate" "accommodate" nil :count 0)
    ("acomodate" "accommodate" nil :count 0)
    ("acomplished" "accomplished" nil :count 0)
    ("acquiantances" "acquaintances" nil :count 0)
    ("actualyl" "actually" nil :count 0)
    ("acurate" "accurate" nil :count 0)
    ("addictional" "additional" nil :count 0)
    ("additinal" "additional" nil :count 0)
    ("addtional" "additional" nil :count 0)
    ("addtions" "additions" nil :count 1)
    ("adequit" "adequate" nil :count 0)
    ("adequite" "adequate" nil :count 0)
    ("adn" "and" nil :count 0)
    ("advanage" "advantage" nil :count 0)
    ("afaik" "as far as I know" nil :count 0)
    ("affraid" "afraid" nil :count 0)
    ("afk" "away from keyboard" nil :count 0)
    ("afterthe" "after the" nil :count 0)
    ("aganist" "against" nil :count 0)
    ("aggresive" "aggressive" nil :count 0)
    ("agian" "again" nil :count 0)
    ("agreemeent" "agreement" nil :count 0)
    ("agreemeents" "agreements" nil :count 0)
    ("agreemnet" "agreement" nil :count 0)
    ("agreemnets" "agreements" nil :count 0)
    ("agressive" "aggressive" nil :count 0)
    ("ahppen" "happen" nil :count 0)
    ("ahve" "have" nil :count 0)
    ("allwasy" "always" nil :count 0)
    ("allwyas" "always" nil :count 0)
    ("almots" "almost" nil :count 0)
    ("almsot" "almost" nil :count 0)
    ("alomst" "almost" nil :count 0)
    ("alot" "a lot" nil :count 1)
    ("alraedy" "already" nil :count 0)
    ("alreayd" "already" nil :count 0)
    ("alreday" "already" nil :count 0)
    ("alwasy" "always" nil :count 0)
    ("alwats" "always" nil :count 0)
    ("alway" "always" nil :count 0)
    ("alwyas" "always" nil :count 0)
    ("amde" "made" nil :count 0)
    ("ameria" "America" nil :count 0)
    ("amke" "make" nil :count 2)
    ("amkes" "makes" nil :count 0)
    ("anbd" "and" nil :count 0)
    ("andone" "and one" nil :count 0)
    ("andt he" "and the" nil :count 0)
    ("andteh" "and the" nil :count 0)
    ("andthe" "and the" nil :count 0)
    ("anothe" "another" nil :count 1)
    ("anual" "annual" nil :count 0)
    ("apache" "Apache" nil :count 0)
    ("apparant" "apparent" nil :count 0)
    ("apparrent" "apparent" nil :count 0)
    ("appearence" "appearance" nil :count 0)
    ("appeares" "appears" nil :count 1)
    ("applicaiton" "application" nil :count 0)
    ("applicaitons" "applications" nil :count 0)
    ("applyed" "applied" nil :count 0)
    ("appointiment" "appointment" nil :count 0)
    ("approrpiate" "appropriate" nil :count 0)
    ("approrpriate" "appropriate" nil :count 0)
    ("aquisition" "acquisition" nil :count 0)
    ("aquisitions" "acquisitions" nil :count 0)
    ("arent" "aren't" nil :count 0)
    ("arguement" "argument" nil :count 0)
    ("arguements" "arguments" nil :count 0)
    ("arnt" "aren't" nil :count 0)
    ("arond" "around" nil :count 0)
    ("artical" "article" nil :count 0)
    ("articel" "article" nil :count 0)
    ("asdvertising" "advertising" nil :count 0)
    ("assistent" "assistant" nil :count 0)
    ("assumpiton" "assumption" nil :count 0)
    ("asthe" "as the" nil :count 0)
    ("atention" "attention" nil :count 0)
    ("atm" "at the moment" nil :count 0)
    ("atmospher" "atmosphere" nil :count 0)
    ("attentioin" "attention" nil :count 0)
    ("atthe" "at the" nil :count 0)
    ("audeince" "audience" nil :count 0)
    ("audiance" "audience" nil :count 0)
    ("authetication" "authentication" nil :count 0)
    ("availalbe" "available" nil :count 0)
    ("awya" "away" nil :count 0)
    ("aywa" "away" nil :count 0)
    ("bakc" "back" nil :count 0)
    ("balence" "balance" nil :count 0)
    ("ballance" "balance" nil :count 0)
    ("baout" "about" nil :count 0)
    ("bcak" "back" nil :count 0)
    ("beacause" "because" nil :count 0)
    ("beacuse" "because" nil :count 0)
    ("bec" "because" nil :count 1)
    ("becasue" "because" nil :count 0)
    ("becaus" "because" nil :count 0)
    ("becausea" "because a" nil :count 0)
    ("becauseof" "because of" nil :count 0)
    ("becausethe" "because the" nil :count 0)
    ("becauseyou" "because you" nil :count 0)
    ("becomeing" "becoming" nil :count 0)
    ("becomming" "becoming" nil :count 0)
    ("becuase" "because" nil :count 0)
    ("becuse" "because" nil :count 0)
    ("befoer" "before" nil :count 0)
    ("beggining" "beginning" nil :count 0)
    ("begining" "beginning" nil :count 0)
    ("beginining" "beginning" nil :count 0)
    ("behabviour" "behaviour" nil :count 0)
    ("behaivior" "behaviour" nil :count 0)
    ("behavour" "behaviour" nil :count 0)
    ("beleiev" "believe" nil :count 0)
    ("beleieve" "believe" nil :count 0)
    ("beleif" "belief" nil :count 0)
    ("beleive" "believe" nil :count 0)
    ("beleived" "believed" nil :count 0)
    ("beleives" "believes" nil :count 0)
    ("beliefe" "belief" nil :count 0)
    ("beliveve" "believe" nil :count 0)
    ("benifit" "benefit" nil :count 0)
    ("benifits" "benefits" nil :count 0)
    ("betwen" "between" nil :count 0)
    ("beutiful" "beautiful" nil :count 0)
    ("blase" "blase" nil :count 0)
    ("boxs" "boxes" nil :count 0)
    ("brodcast" "broadcast" nil :count 0)
    ("btw" "by the way" nil :count 0)
    ("butthe" "but the" nil :count 0)
    ("bve" "be" nil :count 0)
    ("cafe" "cafe" nil :count 0)
    ("caharcter" "character" nil :count 0)
    ("calcullated" "calculated" nil :count 0)
    ("calulated" "calculated" nil :count 0)
    ("candidtae" "candidate" nil :count 0)
    ("candidtaes" "candidates" nil :count 0)
    ("cant" "can't" nil :count 0)
    ("caontains" "contains" nil :count 0)
    ("capabalities" "capabilities" nil :count 0)
    ("capabilites" "capabilities" nil :count 0)
    ("catagory" "category" nil :count 0)
    ("categiory" "category" nil :count 0)
    ("cateogry" "category" nil :count 1)
    ("certian" "certain" nil :count 0)
    ("challange" "challenge" nil :count 0)
    ("challanges" "challenges" nil :count 0)
    ("chaneg" "change" nil :count 0)
    ("chanegs" "changes" nil :count 0)
    ("changable" "changeable" nil :count 0)
    ("changeing" "changing" nil :count 0)
    ("changng" "changing" nil :count 0)
    ("charachter" "character" nil :count 0)
    ("charachters" "characters" nil :count 0)
    ("charactor" "character" nil :count 0)
    ("charecter" "character" nil :count 0)
    ("charector" "character" nil :count 0)
    ("cheif" "chief" nil :count 0)
    ("chekc" "check" nil :count 0)
    ("chnage" "change" nil :count 0)
    ("cieling" "ceiling" nil :count 0)
    ("circut" "circuit" nil :count 0)
    ("claer" "clear" nil :count 0)
    ("claered" "cleared" nil :count 0)
    ("claerly" "clearly" nil :count 0)
    ("cliant" "client" nil :count 0)
    ("cliche" "cliche" nil :count 0)
    ("cna" "can" nil :count 2)
    ("colection" "collection" nil :count 0)
    ("comanies" "companies" nil :count 0)
    ("comany" "company" nil :count 0)
    ("comapnies" "companies" nil :count 0)
    ("comapny" "company" nil :count 0)
    ("combintation" "combination" nil :count 0)
    ("comited" "committed" nil :count 0)
    ("comittee" "committee" nil :count 0)
    ("commadn" "command" nil :count 0)
    ("comming" "coming" nil :count 0)
    ("commitee" "committee" nil :count 0)
    ("committe" "committee" nil :count 0)
    ("committment" "commitment" nil :count 0)
    ("committments" "commitments" nil :count 0)
    ("committy" "committee" nil :count 0)
    ("comntain" "contain" nil :count 0)
    ("comntains" "contains" nil :count 0)
    ("compair" "compare" nil :count 0)
    ("compatable" "compatible" nil :count 0)
    ("compleated" "completed" nil :count 0)
    ("compleatly" "completely" nil :count 0)
    ("compleatness" "completeness" nil :count 0)
    ("completly" "completely" nil :count 1)
    ("completness" "completeness" nil :count 0)
    ("complteted" "completed" nil :count 0)
    ("composate" "composite" nil :count 0)
    ("compteted" "completed" nil :count 0)
    ("comtain" "contain" nil :count 0)
    ("comtains" "contains" nil :count 0)
    ("comunicate" "communicate" nil :count 0)
    ("comunity" "community" nil :count 0)
    ("condersider" "consider" nil :count 0)
    ("condolances" "condolences" nil :count 0)
    ("conected" "connected" nil :count 0)
    ("conferance" "conference" nil :count 0)
    ("configration" "configuration" nil :count 0)
    ("configuraiton" "configuration" nil :count 1)
    ("confirmmation" "confirmation" nil :count 0)
    ("conjuntion" "conjunction" nil :count 0)
    ("considerit" "considerate" nil :count 0)
    ("considerite" "considerate" nil :count 0)
    ("consistant" "consistent" nil :count 0)
    ("consonent" "consonant" nil :count 0)
    ("conspiricy" "conspiracy" nil :count 0)
    ("constuction" "construction" nil :count 0)
    ("consultent" "consultant" nil :count 0)
    ("consumeable" "consumable" nil :count 0)
    ("contitions" "conditions" nil :count 0)
    ("controlable" "controllable" nil :count 0)
    ("convertable" "convertible" nil :count 0)
    ("cooparate" "cooperate" nil :count 0)
    ("cooporate" "cooperate" nil :count 0)
    ("corproation" "corporation" nil :count 0)
    ("corproations" "corporations" nil :count 0)
    ("corrospond" "correspond" nil :count 0)
    ("corruptable" "corruptible" nil :count 0)
    ("cotten" "cotton" nil :count 0)
    ("coudl" "could" nil :count 0)
    ("coudln" "couldn" nil :count 0)
    ("coudn" "couldn" nil :count 0)
    ("couldnt" "couldn't" nil :count 0)
    ("couldthe" "could the" nil :count 0)
    ("cpoy" "copy" nil :count 0)
    ("creme" "creme" nil :count 0)
    ("ctaegory" "category" nil :count 0)
    ("cusotmer" "customer" nil :count 0)
    ("cusotmers" "customers" nil :count 0)
    ("cutsomer" "customer" nil :count 0)
    ("cutsomers" "customers" nil :count 0)
    ("cxan" "can" nil :count 0)
    ("danceing" "dancing" nil :count 0)
    ("dcument" "document" nil :count 0)
    ("deatils" "details" nil :count 0)
    ("decison" "decision" nil :count 0)
    ("decisons" "decisions" nil :count 0)
    ("decor" "decor" nil :count 0)
    ("defendent" "defendant" nil :count 0)
    ("definately" "definitely" nil :count 0)
    ("definded" "defined" nil :count 0)
    ("delcare" "declare" nil :count 0)
    ("departemnt" "department" nil :count 0)
    ("dependances" "dependencies" nil :count 0)
    ("dependancies" "dependencies" nil :count 0)
    ("deptartment" "department" nil :count 0)
    ("desicion" "decision" nil :count 0)
    ("desicions" "decisions" nil :count 0)
    ("desision" "decision" nil :count 0)
    ("desisions" "decisions" nil :count 0)
    ("detente" "detente" nil :count 0)
    ("determin" "determine" nil :count 0)
    ("determins" "determine" nil :count 0)
    ("develeoprs" "developers" nil :count 0)
    ("devellop" "develop" nil :count 0)
    ("develloped" "developed" nil :count 0)
    ("develloper" "developer" nil :count 0)
    ("devellopers" "developers" nil :count 0)
    ("develloping" "developing" nil :count 0)
    ("devellopment" "development" nil :count 0)
    ("devellopments" "developments" nil :count 0)
    ("devellops" "develop" nil :count 0)
    ("develope" "develop" nil :count 0)
    ("developement" "development" nil :count 1)
    ("developements" "developments" nil :count 0)
    ("developor" "developer" nil :count 0)
    ("developors" "developers" nil :count 0)
    ("develpment" "development" nil :count 0)
    ("devloped" "developed" nil :count 0)
    ("diaplay" "display" nil :count 0)
    ("didint" "didn't" nil :count 0)
    ("didnot" "did not" nil :count 0)
    ("didnt" "didn't" nil :count 0)
    ("difefrent" "different" nil :count 0)
    ("diferences" "differences" nil :count 0)
    ("differance" "difference" nil :count 0)
    ("differances" "differences" nil :count 0)
    ("differant" "different" nil :count 0)
    ("differemt" "different" nil :count 0)
    ("differnt" "different" nil :count 0)
    ("diffrent" "different" nil :count 0)
    ("directer" "director" nil :count 0)
    ("directers" "directors" nil :count 0)
    ("directiosn" "direction" nil :count 0)
    ("disatisfied" "dissatisfied" nil :count 0)
    ("discoverd" "discovered" nil :count 0)
    ("disign" "design" nil :count 0)
    ("dispaly" "display" nil :count 0)
    ("dissonent" "dissonant" nil :count 0)
    ("distribusion" "distribution" nil :count 0)
    ("distrubution" "distribution" nil :count 0)
    ("divsion" "division" nil :count 0)
    ("docuement" "documents" nil :count 0)
    ("docuemnt" "document" nil :count 0)
    ("documetn" "document" nil :count 0)
    ("documnet" "document" nil :count 0)
    ("documnets" "documents" nil :count 0)
    ("doese" "does" nil :count 0)
    ("doesnt" "doesn't" nil :count 0)
    ("doign" "doing" nil :count 0)
    ("doimg" "doing" nil :count 0)
    ("doind" "doing" nil :count 0)
    ("dollers" "dollars" nil :count 0)
    ("donig" "doing" nil :count 0)
    ("dont" "don't" nil :count 2)
    ("dosnt" "doesn't" nil :count 0)
    ("driveing" "driving" nil :count 0)
    ("drnik" "drink" nil :count 0)
    ("eclair" "eclair" nil :count 0)
    ("efel" "feel" nil :count 0)
    ("effecient" "efficient" nil :count 0)
    ("efort" "effort" nil :count 0)
    ("eforts" "efforts" nil :count 0)
    ("ehr" "her" nil :count 0)
    ("eligable" "eligible" nil :count 0)
    ("embarass" "embarrass" nil :count 0)
    ("emigre" "emigre" nil :count 0)
    ("enahancements" "enhancements" nil :count 0)
    ("english" "English" nil :count 0)
    ("enought" "enough" nil :count 0)
    ("entree" "entree" nil :count 0)
    ("equippment" "equipment" nil :count 0)
    ("equivalant" "equivalent" nil :count 0)
    ("erreneous" "erroneous" nil :count 0)
    ("esle" "else" nil :count 0)
    ("especally" "especially" nil :count 0)
    ("especialyl" "especially" nil :count 0)
    ("espesially" "especially" nil :count 0)
    ("excellant" "excellent" nil :count 0)
    ("excercise" "exercise" nil :count 0)
    ("exchagne" "exchange" nil :count 0)
    ("exchagnes" "exchanges" nil :count 0)
    ("excitment" "excitement" nil :count 0)
    ("excitnig" "exciting" nil :count 1)
    ("exhcange" "exchange" nil :count 0)
    ("exhcanges" "exchanges" nil :count 0)
    ("experiance" "experience" nil :count 0)
    ("experienc" "experience" nil :count 0)
    ("exprience" "experience" nil :count 0)
    ("exprienced" "experienced" nil :count 0)
    ("eyt" "yet" nil :count 0)
    ("facade" "facade" nil :count 0)
    ("faeture" "feature" nil :count 0)
    ("faetures" "features" nil :count 0)
    ("familair" "familiar" nil :count 0)
    ("familar" "familiar" nil :count 0)
    ("familliar" "familiar" nil :count 0)
    ("fammiliar" "familiar" nil :count 0)
    ("february" "february" nil :count 0)
    ("feild" "field" nil :count 0)
    ("feilds" "fields" nil :count 0)
    ("fianlly" "finally" nil :count 0)
    ("fidn" "find" nil :count 0)
    ("fifith" "fifth" nil :count 0)
    ("finalyl" "finally" nil :count 0)
    ("finnally" "finally" nil :count 0)
    ("finnish" "finish" nil :count 0)
    ("firends" "friends" nil :count 0)
    ("firts" "first" nil :count 0)
    ("fixit" "fix it" nil :count 0)
    ("fname" "Chakravarthy" nil :count 1)
    ("follwo" "follow" nil :count 0)
    ("follwoing" "following" nil :count 0)
    ("foloowing" "following" nil :count 0)
    ("fora" "for a" nil :count 0)
    ("foriegn" "foreign" nil :count 0)
    ("forthe" "for the" nil :count 0)
    ("forwrd" "forward" nil :count 0)
    ("forwrds" "forwards" nil :count 0)
    ("foudn" "found" nil :count 0)
    ("foward" "forward" nil :count 1)
    ("fowards" "forwards" nil :count 0)
    ("freightening" "frightening" nil :count 0)
    ("freind" "friend" nil :count 0)
    ("freindly" "friendly" nil :count 0)
    ("freinds" "friends" nil :count 0)
    ("frmo" "from" nil :count 0)
    ("fromt he" "from the" nil :count 0)
    ("fromthe" "from the" nil :count 0)
    ("functionalties" "functionalities" nil :count 0)
    ("funtionality" "functionality" nil :count 0)
    ("furneral" "funeral" nil :count 0)
    ("fwe" "few" nil :count 0)
    ("garantee" "guarantee" nil :count 0)
    ("gaurd" "guard" nil :count 0)
    ("gemeral" "general" nil :count 0)
    ("gerat" "great" nil :count 0)
    ("gerneral" "general" nil :count 0)
    ("geting" "getting" nil :count 0)
    ("gettin" "getting" nil :count 0)
    ("gievn" "given" nil :count 0)
    ("ginormus" "ginormous" nil :count 0)
    ("giveing" "giving" nil :count 0)
    ("gloabl" "global" nil :count 0)
    ("goign" "going" nil :count 0)
    ("gonig" "going" nil :count 0)
    ("govenment" "government" nil :count 0)
    ("goverment" "government" nil :count 0)
    ("gruop" "group" nil :count 0)
    ("gruops" "groups" nil :count 0)
    ("grwo" "grow" nil :count 0)
    ("gtg" "got to go" nil :count 0)
    ("guidlines" "guidelines" nil :count 0)
    ("hadbeen" "had been" nil :count 0)
    ("hadnt" "hadn't" nil :count 0)
    ("haev" "have" nil :count 0)
    ("hapen" "happen" nil :count 0)
    ("hapened" "happened" nil :count 0)
    ("hapening" "happening" nil :count 0)
    ("hapens" "happens" nil :count 0)
    ("happend" "happened" nil :count 0)
    ("hasbeen" "has been" nil :count 0)
    ("hasnt" "hasn't" nil :count 0)
    ("havebeen" "have been" nil :count 0)
    ("haveing" "having" nil :count 0)
    ("haven;t" "haven't" nil :count 0)
    ("hda" "had" nil :count 0)
    ("hearign" "hearing" nil :count 0)
    ("heire" "he-ire" nil :count 0)
    ("helpdesk" "help-desk" nil :count 0)
    ("helpfull" "helpful" nil :count 0)
    ("herat" "heart" nil :count 0)
    ("hesaid" "he said" nil :count 0)
    ("hestiant" "hesitant" nil :count 0)
    ("hewas" "he was" nil :count 0)
    ("hge" "he" nil :count 0)
    ("hier" "heir" nil :count 0)
    ("hismelf" "himself" nil :count 0)
    ("hiten" "hitting" nil :count 0)
    ("hitten" "hitting" nil :count 0)
    ("hlep" "help" nil :count 0)
    ("horiozns" "horizons" nil :count 1)
    ("howerver" "however" nil :count 0)
    ("hsa" "has" nil :count 0)
    ("hsi" "his" nil :count 0)
    ("hte" "the" nil :count 6)
    ("htere" "there" nil :count 0)
    ("htese" "these" nil :count 0)
    ("htey" "they" nil :count 0)
    ("hting" "thing" nil :count 0)
    ("htink" "think" nil :count 0)
    ("htis" "this" nil :count 0)
    ("htp:" "http:" nil :count 0)
    ("http:\\\\" "http:// class=" string :count 0)
    ("httpL" "http: class=" string :count 0)
    ("hvae" "have" nil :count 0)
    ("hvaing" "having" nil :count 0)
    ("hwich" "which" nil :count 0)
    ("idae" "idea" nil :count 0)
    ("idaes" "ideas" nil :count 0)
    ("identifiy" "identify" nil :count 0)
    ("identofy" "identify" nil :count 0)
    ("ihs" "his" nil :count 0)
    ("imediate" "immediate" nil :count 0)
    ("imediatly" "immediately" nil :count 0)
    ("immediatly" "immediately" nil :count 0)
    ("impelement" "implement" nil :count 1)
    ("impilies" "implies" nil :count 0)
    ("implemenation" "implementation" nil :count 0)
    ("importent" "important" nil :count 0)
    ("importnat" "important" nil :count 0)
    ("impossable" "impossible" nil :count 0)
    ("improvemenets" "improvements" nil :count 0)
    ("improvemnt" "improvement" nil :count 0)
    ("improvment" "improvement" nil :count 0)
    ("includ" "include" nil :count 0)
    ("indecate" "indicate" nil :count 0)
    ("indenpendence" "independence" nil :count 0)
    ("indenpendent" "independent" nil :count 0)
    ("indepedent" "independent" nil :count 0)
    ("independance" "independence" nil :count 0)
    ("independant" "independent" nil :count 2)
    ("indivitual" "individual" nil :count 0)
    ("influance" "influence" nil :count 0)
    ("infomation" "information" nil :count 0)
    ("informatoin" "information" nil :count 0)
    ("infromation" "infraction" nil :count 0)
    ("inital" "initial" nil :count 0)
    ("initalization" "initialization" nil :count 0)
    ("instaleld" "installed" nil :count 0)
    ("insted" "instead" nil :count 0)
    ("insurence" "insurance" nil :count 0)
    ("inteh" "in the" nil :count 0)
    ("interum" "interim" nil :count 0)
    ("inthe" "in the" nil :count 1)
    ("intitial" "initial" nil :count 0)
    ("inturn" "in turn" nil :count 0)
    ("invitaion" "invitation" nil :count 0)
    ("invstigated" "investigated" nil :count 0)
    ("inwhich" "in which" nil :count 0)
    ("irrevelant" "irrelevant" nil :count 0)
    ("isnt" "isn't" nil :count 0)
    ("isthe" "is the" nil :count 0)
    ("itis" "it is" nil :count 0)
    ("ititial" "initial" nil :count 0)
    ("itll" "it'll" nil :count 1)
    ("itnerest" "interest" nil :count 0)
    ("itnerested" "interested" nil :count 0)
    ("itneresting" "interesting" nil :count 0)
    ("itnerests" "interests" nil :count 0)
    ("itwas" "it was" nil :count 0)
    ("ivestigative" "investigative" nil :count 0)
    ("iwll" "will" nil :count 1)
    ("iwth" "with" nil :count 0)
    ("iykwim" "if you know what I mean" nil :count 0)
    ("jsut" "just" nil :count 0)
    ("jugment" "judgment" nil :count 0)
    ("knowldge" "knowledge" nil :count 0)
    ("knowlege" "knowledge" nil :count 0)
    ("knwo" "know" nil :count 0)
    ("knwon" "known" nil :count 0)
    ("knwos" "knows" nil :count 0)
    ("konw" "know" nil :count 0)
    ("konwn" "known" nil :count 0)
    ("konws" "knows" nil :count 0)
    ("labratory" "laboratory" nil :count 0)
    ("languange" "language" nil :count 0)
    ("lastyear" "last year" nil :count 0)
    ("learnign" "learning" nil :count 0)
    ("lenght" "length" nil :count 0)
    ("levle" "level" nil :count 0)
    ("libary" "library" nil :count 0)
    ("librarry" "library" nil :count 0)
    ("librery" "library" nil :count 0)
    ("liek" "like" nil :count 0)
    ("liekd" "liked" nil :count 0)
    ("lieutenent" "lieutenant" nil :count 0)
    ("liev" "live" nil :count 0)
    ("likly" "likely" nil :count 0)
    ("lisense" "license" nil :count 0)
    ("littel" "little" nil :count 0)
    ("litttle" "little" nil :count 0)
    ("liuke" "like" nil :count 0)
    ("liveing" "living" nil :count 0)
    ("lname" "Raghunandan" nil :count 0)
    ("loev" "love" nil :count 0)
    ("lonly" "lonely" nil :count 0)
    ("lookign" "looking" nil :count 0)
    ("lookup" "look up" nil :count 0)
    ("loooking" "looking" nil :count 0)
    ("maintenence" "maintenance" nil :count 0)
    ("makeing" "making" nil :count 0)
    ("managment" "management" nil :count 0)
    ("mantain" "maintain" nil :count 0)
    ("marraige" "marriage" nil :count 0)
    ("memeber" "member" nil :count 0)
    ("merchent" "merchant" nil :count 0)
    ("mesage" "message" nil :count 0)
    ("mesages" "messages" nil :count 0)
    ("mispell" "misspell" nil :count 0)
    ("mispelling" "misspelling" nil :count 0)
    ("mispellings" "misspellings" nil :count 0)
    ("mkae" "make" nil :count 0)
    ("mkaes" "makes" nil :count 0)
    ("mkaing" "making" nil :count 0)
    ("moeny" "money" nil :count 0)
    ("morgage" "mortgage" nil :count 0)
    ("mroe" "more" nil :count 0)
    ("mysefl" "myself" nil :count 0)
    ("myu" "my" nil :count 0)
    ("naive" "naive" nil :count 0)
    ("necassarily" "necessarily" nil :count 0)
    ("necassary" "necessary" nil :count 0)
    ("neccessarily" "necessarily" nil :count 0)
    ("neccessary" "necessary" nil :count 0)
    ("necesarily" "necessarily" nil :count 0)
    ("necesary" "necessary" nil :count 0)
    ("negotiaing" "negotiating" nil :count 0)
    ("nkow" "know" nil :count 0)
    ("nothign" "nothing" nil :count 0)
    ("nothiing" "nothing" nil :count 0)
    ("nver" "never" nil :count 0)
    ("nwe" "new" nil :count 0)
    ("nwo" "now" nil :count 0)
    ("obediant" "obedient" nil :count 0)
    ("ocasion" "occasion" nil :count 0)
    ("occassion" "occasion" nil :count 0)
    ("occured" "occurred" nil :count 0)
    ("occurence" "occurrence" nil :count 0)
    ("occurences" "occurrences" nil :count 0)
    ("occurrance" "occurrence" nil :count 1)
    ("ocur" "occur" nil :count 0)
    ("odbc" "ODBC" nil :count 0)
    ("oeprator" "operator" nil :count 0)
    ("ofits" "of its" nil :count 0)
    ("ofthe" "of the" nil :count 0)
    ("oging" "going" nil :count 0)
    ("ohter" "other" nil :count 0)
    ("omre" "more" nil :count 0)
    ("omw" "on my way" nil :count 0)
    ("oneof" "one of" nil :count 0)
    ("onepoint" "one point" nil :count 0)
    ("ont he" "on the" nil :count 0)
    ("onthe" "on the" nil :count 2)
    ("onyl" "only" nil :count 0)
    ("opcode" "op-code" nil :count 0)
    ("operaror" "operator" nil :count 0)
    ("oppasite" "opposite" nil :count 0)
    ("opperation" "operation" nil :count 0)
    ("oppertunity" "opportunity" nil :count 0)
    ("opposate" "opposite" nil :count 0)
    ("opposible" "opposable" nil :count 0)
    ("opposit" "opposite" nil :count 0)
    ("oppotunities" "opportunities" nil :count 0)
    ("oppotunity" "opportunity" nil :count 0)
    ("optimiziations" "optimizations" nil :count 0)
    ("orginization" "organization" nil :count 0)
    ("orginized" "organized" nil :count 0)
    ("originial" "original" nil :count 0)
    ("orignal" "original" nil :count 0)
    ("otehr" "other" nil :count 2)
    ("otu" "out" nil :count 0)
    ("outof" "out of" nil :count 0)
    ("overthe" "over the" nil :count 0)
    ("ovverides" "overrides" nil :count 0)
    ("owrk" "work" nil :count 1)
    ("owuld" "would" nil :count 0)
    ("oxident" "oxidant" nil :count 0)
    ("papaer" "paper" nil :count 0)
    ("parliment" "parliament" nil :count 0)
    ("partof" "part of" nil :count 0)
    ("paticular" "particular" nil :count 0)
    ("paymetn" "payment" nil :count 0)
    ("paymetns" "payments" nil :count 0)
    ("pciture" "picture" nil :count 0)
    ("peice" "piece" nil :count 0)
    ("peices" "pieces" nil :count 0)
    ("peolpe" "people" nil :count 0)
    ("peopel" "people" nil :count 0)
    ("percentof" "percent of" nil :count 0)
    ("percentto" "percent to" nil :count 0)
    ("performence" "performance" nil :count 0)
    ("perhasp" "perhaps" nil :count 0)
    ("perhpas" "perhaps" nil :count 0)
    ("permanant" "permanent" nil :count 0)
    ("perminent" "permanent" nil :count 0)
    ("perscriptions" "prescriptions" nil :count 0)
    ("personalyl" "personally" nil :count 0)
    ("pleasent" "pleasant" nil :count 0)
    ("poeple" "people" nil :count 0)
    ("porblem" "problem" nil :count 0)
    ("porblems" "problems" nil :count 0)
    ("porvide" "provide" nil :count 0)
    ("possable" "possible" nil :count 0)
    ("postition" "position" nil :count 0)
    ("potentialy" "potentially" nil :count 0)
    ("prefure" "prefer" nil :count 0)
    ("pregnent" "pregnant" nil :count 0)
    ("prelease" "release" nil :count 0)
    ("prerelease" "pre-release" nil :count 0)
    ("prerequists" "prerequisites" nil :count 0)
    ("presance" "presence" nil :count 0)
    ("prespective" "perspective" nil :count 0)
    ("privelages" "privileges" nil :count 0)
    ("privleged" "privileged" nil :count 0)
    ("probelm" "problem" nil :count 0)
    ("probelms" "problems" nil :count 0)
    ("problesm" "problems" nil :count 0)
    ("proceding" "proceeding" nil :count 0)
    ("proctetion" "protection" nil :count 0)
    ("prominant" "prominent" nil :count 0)
    ("propogation" "propagation" nil :count 0)
    ("propreitory" "proprietary" nil :count 1)
    ("protction" "protection" nil :count 0)
    ("protoge" "protege" nil :count 0)
    ("psoition" "position" nil :count 0)
    ("ptogress" "progress" nil :count 0)
    ("puting" "putting" nil :count 0)
    ("pwoer" "power" nil :count 0)
    ("quater" "quarter" nil :count 0)
    ("quaters" "quarters" nil :count 0)
    ("quesion" "question" nil :count 0)
    ("quesions" "questions" nil :count 0)
    ("questioms" "questions" nil :count 0)
    ("questiosn" "questions" nil :count 0)
    ("questoin" "question" nil :count 0)
    ("quetion" "question" nil :count 0)
    ("quetions" "questions" nil :count 0)
    ("raddress" "#125, 8th Cross, Vidyanagar, Mysore - 570011" nil :count 0)
    ("realtively" "relatively" nil :count 0)
    ("realyl" "really" nil :count 0)
    ("reccomend" "recommend" nil :count 0)
    ("reccommend" "recommend" nil :count 0)
    ("receieve" "receive" nil :count 0)
    ("recepie" "recipe" nil :count 0)
    ("reciepents" "recipients" nil :count 0)
    ("recieve" "receive" nil :count 0)
    ("recieved" "received" nil :count 1)
    ("recieving" "receiving" nil :count 0)
    ("recomend" "recommend" nil :count 0)
    ("recomendation" "recommendation" nil :count 0)
    ("recomendations" "recommendations" nil :count 0)
    ("recomended" "recommended" nil :count 0)
    ("recomending" "recommending" nil :count 0)
    ("reconize" "recognize" nil :count 0)
    ("recrod" "record" nil :count 0)
    ("redirector" "re-director" nil :count 0)
    ("regardsless" "regardless" nil :count 0)
    ("regession" "regression" nil :count 0)
    ("regresion" "regression" nil :count 0)
    ("regsitered" "registered" nil :count 0)
    ("releated" "related" nil :count 0)
    ("religous" "religious" nil :count 0)
    ("relize" "realize" nil :count 0)
    ("reloacted" "relocated" nil :count 0)
    ("reltaed" "related" nil :count 0)
    ("reluctent" "reluctant" nil :count 0)
    ("remeber" "remember" nil :count 0)
    ("reommend" "recommend" nil :count 0)
    ("reprenests" "represents" nil :count 0)
    ("representativs" "representatives" nil :count 0)
    ("representives" "representatives" nil :count 0)
    ("represetned" "represented" nil :count 0)
    ("represnt" "represent" nil :count 1)
    ("requirment" "requirement" nil :count 0)
    ("requirments" "requirements" nil :count 0)
    ("reserach" "research" nil :count 0)
    ("resollution" "resolution" nil :count 0)
    ("resorces" "resources" nil :count 0)
    ("respomd" "respond" nil :count 0)
    ("respomse" "response" nil :count 0)
    ("responce" "response" nil :count 0)
    ("responsability" "responsibility" nil :count 0)
    ("responsable" "responsible" nil :count 0)
    ("responsibile" "responsible" nil :count 0)
    ("responsibilites" "responsibilities" nil :count 0)
    ("responsiblity" "responsibility" nil :count 0)
    ("restaraunt" "restaurant" nil :count 0)
    ("restuarant" "restaurant" nil :count 0)
    ("reult" "result" nil :count 0)
    ("reveiw" "review" nil :count 0)
    ("reveiwing" "reviewing" nil :count 0)
    ("rmail" "rnraghunandan@gmail.com" nil :count 0)
    ("rumers" "rumors" nil :count 0)
    ("runnning" "running" nil :count 0)
    ("rwite" "write" nil :count 0)
    ("rythm" "rhythm" nil :count 0)
    ("saidhe" "said he" nil :count 0)
    ("saidit" "said it" nil :count 0)
    ("saidthat" "said that" nil :count 0)
    ("saidthe" "said the" nil :count 0)
    ("scedule" "schedule" nil :count 0)
    ("sceduled" "scheduled" nil :count 0)
    ("scen" "scene" nil :count 0)
    ("scol" "scowl" nil :count 0)
    ("scoli" "scowl" nil :count 0)
    ("seance" "seance" nil :count 0)
    ("secratary" "secretary" nil :count 0)
    ("sectino" "section" nil :count 0)
    ("securtiy" "security" nil :count 0)
    ("seh" "she" nil :count 0)
    ("selectoin" "selection" nil :count 0)
    ("sentance" "sentence" nil :count 0)
    ("separeate" "separate" nil :count 1)
    ("seperate" "separate" nil :count 0)
    ("seperated" "separated" nil :count 0)
    ("sercumstances" "circumstances" nil :count 0)
    ("serveral" "several" nil :count 1)
    ("sez" "says" nil :count 0)
    ("shcool" "school" nil :count 0)
    ("shesaid" "she said" nil :count 0)
    ("shineing" "shining" nil :count 0)
    ("shiped" "shipped" nil :count 0)
    ("shoudl" "should" nil :count 1)
    ("shouldent" "shouldn't" nil :count 0)
    ("shouldnt" "shouldn't" nil :count 1)
    ("showinf" "showing" nil :count 0)
    ("signifacnt" "significant" nil :count 0)
    ("simalar" "similar" nil :count 0)
    ("similiar" "similar" nil :count 0)
    ("simpilified" "simplified" nil :count 0)
    ("simpyl" "simply" nil :count 0)
    ("sincerly" "sincerely" nil :count 0)
    ("sitll" "still" nil :count 0)
    ("smae" "same" nil :count 0)
    ("smoe" "some" nil :count 0)
    ("soem" "some" nil :count 0)
    ("sohw" "show" nil :count 0)
    ("soical" "social" nil :count 0)
    ("somethign" "something" nil :count 0)
    ("someting" "something" nil :count 0)
    ("somewaht" "somewhat" nil :count 0)
    ("somthing" "something" nil :count 0)
    ("somtimes" "sometimes" nil :count 0)
    ("soudn" "sound" nil :count 0)
    ("soudns" "sounds" nil :count 0)
    ("speach" "speech" nil :count 0)
    ("specificaly" "specifically" nil :count 0)
    ("specificalyl" "specifically" nil :count 0)
    ("statment" "statement" nil :count 0)
    ("statments" "statements" nil :count 0)
    ("stnad" "stand" nil :count 0)
    ("stopry" "story" nil :count 0)
    ("stoyr" "story" nil :count 0)
    ("stpo" "stop" nil :count 0)
    ("strentgh" "strength" nil :count 0)
    ("stroy" "story" nil :count 0)
    ("struggel" "struggle" nil :count 0)
    ("strugle" "struggle" nil :count 0)
    ("studnet" "student" nil :count 0)
    ("sublanguange" "sublanguage" nil :count 0)
    ("substitued" "substituted" nil :count 0)
    ("successfull" "successful" nil :count 0)
    ("successfuly" "successfully" nil :count 1)
    ("successfulyl" "successfully" nil :count 0)
    ("sucess" "success" nil :count 0)
    ("sucessfull" "successful" nil :count 0)
    ("sufficiant" "sufficient" nil :count 0)
    ("suposed" "supposed" nil :count 0)
    ("suppossed" "supposed" nil :count 0)
    ("supressed" "suppressed" nil :count 0)
    ("suprise" "surprise" nil :count 0)
    ("suprised" "surprised" nil :count 0)
    ("suprisingly" "surprisingly" nil :count 0)
    ("swiming" "swimming" nil :count 0)
    ("tahn" "than" nil :count 0)
    ("taht" "that" nil :count 0)
    ("talekd" "talked" nil :count 0)
    ("talior" "tailor" nil :count 0)
    ("talkign" "talking" nil :count 0)
    ("tath" "that" nil :count 0)
    ("tecnical" "technical" nil :count 0)
    ("teh" "the" nil :count 5)
    ("tehy" "they" nil :count 0)
    ("terminiated" "terminated" nil :count 0)
    ("termoil" "turmoil" nil :count 0)
    ("tghe" "the" nil :count 0)
    ("tghis" "this" nil :count 0)
    ("thansk" "thanks" nil :count 0)
    ("thatthe" "that the" nil :count 0)
    ("thecompany" "the company" nil :count 0)
    ("thefirst" "the first" nil :count 0)
    ("thegovernment" "the government" nil :count 0)
    ("themself" "themselves" nil :count 0)
    ("themselfs" "themselves" nil :count 0)
    ("thenew" "the new" nil :count 0)
    ("theri" "their" nil :count 0)
    ("thesame" "the same" nil :count 0)
    ("thetwo" "the two" nil :count 0)
    ("theyll" "they'll" nil :count 0)
    ("theyve" "they've" nil :count 0)
    ("thgat" "that" nil :count 0)
    ("thge" "the" nil :count 1)
    ("thier" "their" nil :count 1)
    ("thigsn" "things" nil :count 0)
    ("thisyear" "this year" nil :count 0)
    ("thna" "than" nil :count 0)
    ("thne" "then" nil :count 0)
    ("thnig" "thing" nil :count 0)
    ("thnigs" "things" nil :count 0)
    ("threatend" "threatened" nil :count 0)
    ("thsi" "this" nil :count 0)
    ("thsoe" "those" nil :count 0)
    ("thta" "that" nil :count 1)
    ("tihs" "this" nil :count 0)
    ("timne" "time" nil :count 0)
    ("tiogether" "together" nil :count 0)
    ("tje" "the" nil :count 0)
    ("tjhe" "the" nil :count 0)
    ("tkae" "take" nil :count 0)
    ("tkaes" "takes" nil :count 0)
    ("tkaing" "taking" nil :count 0)
    ("tlaking" "talking" nil :count 0)
    ("todya" "today" nil :count 0)
    ("togehter" "together" nil :count 0)
    ("tomorow" "tomorrow" nil :count 0)
    ("tongiht" "tonight" nil :count 0)
    ("tonihgt" "tonight" nil :count 0)
    ("totaly" "totally" nil :count 0)
    ("totalyl" "totally" nil :count 0)
    ("tothe" "to the" nil :count 0)
    ("towrad" "toward" nil :count 0)
    ("traditionalyl" "traditionally" nil :count 0)
    ("transfered" "transferred" nil :count 0)
    ("transperancy" "transparency" nil :count 0)
    ("truely" "truly" nil :count 0)
    ("truley" "truly" nil :count 0)
    ("tryed" "tried" nil :count 0)
    ("tthe" "the" nil :count 1)
    ("ttyl" "talk to you later" nil :count 1)
    ("tyhat" "that" nil :count 0)
    ("tyhe" "the" nil :count 0)
    ("udnerstand" "understand" nil :count 0)
    ("understnad" "understand" nil :count 0)
    ("undert he" "under the" nil :count 0)
    ("unexperienced" "inexperienced" nil :count 0)
    ("unicode" "Unicode" nil :count 1)
    ("unitedstates" "United States" nil :count 0)
    ("unliek" "unlike" nil :count 0)
    ("unobstrusively" "unobtrusively" nil :count 0)
    ("unpleasently" "unpleasantly" nil :count 0)
    ("unregistared" "unregistered" nil :count 0)
    ("untill" "until" nil :count 0)
    ("untilll" "until" nil :count 0)
    ("useing" "using" nil :count 0)
    ("usualyl" "usually" nil :count 0)
    ("veyr" "very" nil :count 0)
    ("virtualyl" "virtually" nil :count 0)
    ("vrey" "very" nil :count 0)
    ("vulnerabilites" "vulnerabilities" nil :count 0)
    ("vulnerible" "vulnerable" nil :count 0)
    ("waht" "what" nil :count 0)
    ("warrent" "warrant" nil :count 0)
    ("wasnt" "wasn't" nil :count 0)
    ("watn" "want" nil :count 0)
    ("wehn" "when" nil :count 0)
    ("wernt" "weren't" nil :count 0)
    ("werre" "were" nil :count 0)
    ("wethee" "whether" nil :count 0)
    ("whcih" "which" nil :count 0)
    ("wherre" "where" nil :count 0)
    ("whic" "which" nil :count 1)
    ("whihc" "which" nil :count 0)
    ("whos" "who's" nil :count 0)
    ("whove" "who've" nil :count 0)
    ("whta" "what" nil :count 0)
    ("wief" "wife" nil :count 0)
    ("wierd" "weird" nil :count 0)
    ("wihch" "which" nil :count 0)
    ("wiht" "with" nil :count 1)
    ("willbe" "will be" nil :count 0)
    ("windoes" "windows" nil :count 0)
    ("witha" "with a" nil :count 0)
    ("withe" "with" nil :count 0)
    ("withthe" "with the" nil :count 0)
    ("wiull" "will" nil :count 0)
    ("wnat" "want" nil :count 0)
    ("wnated" "wanted" nil :count 0)
    ("wnats" "wants" nil :count 0)
    ("woh" "who" nil :count 0)
    ("wohle" "whole" nil :count 0)
    ("wokr" "work" nil :count 0)
    ("woudl" "would" nil :count 0)
    ("woudln" "wouldn" nil :count 0)
    ("wouldbe" "would be" nil :count 0)
    ("wouldnt" "wouldn't" nil :count 0)
    ("wriet" "write" nil :count 0)
    ("writin" "writing" nil :count 0)
    ("writting" "writing" nil :count 0)
    ("wrod" "word" nil :count 0)
    ("wroet" "wrote" nil :count 0)
    ("wroking" "working" nil :count 0)
    ("wtf" "what the fuck" nil :count 0)
    ("wtih" "with" nil :count 0)
    ("wuould" "would" nil :count 0)
    ("wya" "way" nil :count 0)
    ("yera" "year" nil :count 0)
    ("yeras" "years" nil :count 0)
    ("yersa" "years" nil :count 0)
    ("yoiu" "you" nil :count 0)
    ("youare" "you are" nil :count 0)
    ("youd" "you'd" nil :count 0)
    ("youre" "you're" nil :count 0)
    ("youve" "you've" nil :count 0)
    ("ytou" "you" nil :count 0)
    ("yuo" "you" nil :count 1)
    ("yuor" "your" nil :count 1)
   ))

(define-abbrev-table 'org-journal-mode-abbrev-table
  '(
    ("i" "I" nil :count 14)
   ))

(define-abbrev-table 'org-mode-abbrev-table
  '(
    ("i" "I" nil :count 49)
   ))

